# Generated by Django 3.1.4 on 2021-02-07 19:58

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('subscription', models.CharField(choices=[('20 swipes per day, 10 km', 'Base'), ('100 swipes per day, 25 km', 'Vip'), ('unlimited swipes, dynamic km', 'Premium')], default='BASE', max_length=50)),
                ('avatar', models.URLField(blank=True, default='', max_length=300, null=True)),
                ('adress', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, default='', null=True, srid=4326)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('liked', models.ManyToManyField(blank=True, related_name='liked_users', to=settings.AUTH_USER_MODEL)),
                ('matched', models.ManyToManyField(blank=True, related_name='_useraccount_matched_+', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
